{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collectionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "collectionName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "propertyCollectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "digitalCollectionAddress",
          "type": "address"
        }
      ],
      "name": "collectionCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collections",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_collectionId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_propertyCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_digitalCollectionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_collectionName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_collectionURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_collectionSymbol",
          "type": "string"
        }
      ],
      "name": "createCollection",
      "outputs": [
        {
          "internalType": "address",
          "name": "nftPropertyAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftDigitalAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"collectionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"propertyCollectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"digitalCollectionAddress\",\"type\":\"address\"}],\"name\":\"collectionCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collections\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_collectionId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_propertyCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_digitalCollectionAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_collectionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_collectionURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_collectionSymbol\",\"type\":\"string\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftPropertyAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftDigitalAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"subDao, 1155 and 721 collection will be linked by a unique id for each colllction\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"get the dao contract address to be able to create subDao\"},\"createCollection(string,string,string)\":{\"params\":{\"_collectionName\":\"Type of object\",\"_collectionSymbol\":\"symbol of the token for the collection. Should be the same for all the collections\",\"_collectionURI\":\"URI for 1155 collection\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"collectionName\":{\"details\":\"used to avoid twice collection in createCollection require\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createCollection(string,string,string)\":{\"notice\":\"function that create the subDao, 1155 and 721 collectiononly owner of the contract can do it\"}},\"notice\":\"This contract manage the creation of new type of object collection on collectorChaineach collection creation will create : 1 sub dao, 1 ERC1155collection (propertt nft), 1 ERC721 collection(digital nft)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"project:/contracts/Factory.sol\":{\"keccak256\":\"0xd06236ed7ca682e29d9c14689f7f67d3201f4d377b0f3dafde9cb7c3551771aa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://242ce0a269150492c3bb3ead7a225ff0e58dfb0af59afd9dae6f47559e18e0aa\",\"dweb:/ipfs/QmX3XbMzPKfM6U1BH8fsddRciJiPsu9xvQiRsbNy79KuYS\"]},\"project:/contracts/NftDigital.sol\":{\"keccak256\":\"0xa37bd391cdff5fe2c16f3a60cf2597a46ca460c3426ee0fe74c6b404248c7452\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://81f59788add27da4de50ee5de7578cc87343a42bba5879069000da94fff3ed68\",\"dweb:/ipfs/QmYU18XVPoKLBK3o199dgXTMJb4sAF26WPwCuVqkkqkALc\"]},\"project:/contracts/NftProperty.sol\":{\"keccak256\":\"0x455bb51cd9d1c0d7afa91b3f99445fc14fe8780cf57ac9b0bc0a266386c46f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b7b92cadb4bbbb35d1341f04a92a773e1e5b6ade365ebe4b9de2479c50d4ba0\",\"dweb:/ipfs/QmWBzNXcscVoQk7DX2Z7FB4tJWHd4YR1SG5d2YS21PRLYP\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd917747dc87f189c6779b894f367a028f9dca4be930283cccec8f312966af820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a5e5b99830cf233f77aa3b1bd1f57561faee103beeee88e6a6f86d044817bbb\",\"dweb:/ipfs/QmREYidSDpHPig3AhxzsMHg3w2ZtMeGfRhcokXxEZyj6fC\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0x4e7bcc6aa9b150e125df8afbfbca5dfb7c92fa4fb01985f2f595ce0c96153cff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75aa1a94e176c23d37e117daf8386cd6301119b1ca5cf521fe22de9ccc13dade\",\"dweb:/ipfs/QmfTfUFGRZ3iNavQgLmj2zNR7Pz2djKV5UPRTmDWnapbGg\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200007b5760003560e01c8063ece86c211162000056578063ece86c2114620000d3578063f2fde38b1462000118578063fdbda0ec146200012f57600080fd5b8063051802371462000080578063715018a6146200009e5780638da5cb5b14620000aa575b600080fd5b6001546200008b9081565b6040519081526020015b60405180910390f35b620000a862000158565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200162000095565b620000ea620000e436600462000a25565b62000170565b6040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301520162000095565b620000a86200012936600462000ab7565b6200068b565b620001466200014036600462000af6565b62000748565b60405162000095949392919062000b82565b620001626200082f565b6200016e6000620008b2565b565b6000806200017d6200082f565b600085511162000214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f636f6c6c656374696f6e206e616d652073686f756c64206e6f74206265206e7560448201527f6c6c00000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000845111620002a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f636f6c6c656374696f6e205552492073686f756c64206e6f74206265206e756c60448201527f6c0000000000000000000000000000000000000000000000000000000000000060648201526084016200020b565b600385604051620002b9919062000bcb565b9081526040519081900360200190205460ff161562000335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f636f6c6c656374696f6e20616c7265616479206372656174656400000000000060448201526064016200020b565b60006200034160015490565b600554604051879173ffffffffffffffffffffffffffffffffffffffff16906200036b9062000927565b620003799392919062000be9565b604051809103906000f08015801562000396573d6000803e3d6000fd5b5090506000620003a560015490565b6005546040518991889173ffffffffffffffffffffffffffffffffffffffff90911690620003d39062000935565b620003e2949392919062000c2a565b604051809103906000f080158015620003ff573d6000803e3d6000fd5b5090506200045a60405180608001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6001805482526020820189815273ffffffffffffffffffffffffffffffffffffffff85811660408501528416606084015260028054928301815560005282517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace6004909302928301908155905183927f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf0190620004f8908262000d29565b506040828101516002830180547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff9384161790915560609094015160039093018054909416928116929092179092556004805492517f4830ebcf0000000000000000000000000000000000000000000000000000000081529290911691634830ebcf91620005a1918c910162000e50565b600060405180830381600087803b158015620005bc57600080fd5b505af1158015620005d1573d6000803e3d6000fd5b505050506001600389604051620005e9919062000bcb565b90815260405190819003602001902080549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009092169190911790557f81032603cc83ea314c740484276d4b1d8e02c0e6c3a997883c4bc72bf84093536200065260015490565b89858560405162000667949392919062000b82565b60405180910390a16200067e600180546001019055565b5090969095509350505050565b620006956200082f565b73ffffffffffffffffffffffffffffffffffffffff81166200073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016200020b565b6200074581620008b2565b50565b600281815481106200075957600080fd5b60009182526020909120600490910201805460018201805491935090620007809062000c81565b80601f0160208091040260200160405190810160405280929190818152602001828054620007ae9062000c81565b8015620007ff5780601f10620007d357610100808354040283529160200191620007ff565b820191906000526020600020905b815481529060010190602001808311620007e157829003601f168201915b505050506002830154600390930154919273ffffffffffffffffffffffffffffffffffffffff9081169216905084565b60005473ffffffffffffffffffffffffffffffffffffffff1633146200016e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200020b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6127d38062000e6683390190565b612575806200363983390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200098457600080fd5b813567ffffffffffffffff80821115620009a257620009a262000943565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715620009eb57620009eb62000943565b8160405283815286602085880101111562000a0557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121562000a3b57600080fd5b833567ffffffffffffffff8082111562000a5457600080fd5b62000a628783880162000972565b9450602086013591508082111562000a7957600080fd5b62000a878783880162000972565b9350604086013591508082111562000a9e57600080fd5b5062000aad8682870162000972565b9150509250925092565b60006020828403121562000aca57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811462000aef57600080fd5b9392505050565b60006020828403121562000b0957600080fd5b5035919050565b60005b8381101562000b2d57818101518382015260200162000b13565b50506000910152565b6000815180845262000b5081602086016020860162000b10565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b84815260806020820152600062000b9d608083018662000b36565b73ffffffffffffffffffffffffffffffffffffffff9485166040840152929093166060909101529392505050565b6000825162000bdf81846020870162000b10565b9190910192915050565b83815260606020820152600062000c04606083018562000b36565b905073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b84815260806020820152600062000c45608083018662000b36565b828103604084015262000c59818662000b36565b91505073ffffffffffffffffffffffffffffffffffffffff8316606083015295945050505050565b600181811c9082168062000c9657607f821691505b60208210810362000cd0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111562000d2457600081815260208120601f850160051c8101602086101562000cff5750805b601f850160051c820191505b8181101562000d205782815560010162000d0b565b5050505b505050565b815167ffffffffffffffff81111562000d465762000d4662000943565b62000d5e8162000d57845462000c81565b8462000cd6565b602080601f83116001811462000db4576000841562000d7d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855562000d20565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101562000e035788860151825594840194600190910190840162000de2565b508582101562000e4057878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600062000aef602083018462000b3656fe60a0604052600060809081526003906200001a90826200013b565b503480156200002857600080fd5b50604051620027d3380380620027d38339810160408190526200004b9162000224565b81620000578162000084565b5060079290925550600880546001600160a01b0319166001600160a01b0390921691909117905562000316565b60026200009282826200013b565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000c157607f821691505b602082108103620000e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013657600081815260208120601f850160051c81016020861015620001115750805b601f850160051c820191505b8181101562000132578281556001016200011d565b5050505b505050565b81516001600160401b0381111562000157576200015762000096565b6200016f81620001688454620000ac565b84620000e8565b602080601f831160018114620001a757600084156200018e5750858301515b600019600386901b1c1916600185901b17855562000132565b600085815260208120601f198616915b82811015620001d857888601518255948401946001909101908401620001b7565b5085821015620001f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200021f57600080fd5b919050565b6000806000606084860312156200023a57600080fd5b8351602080860151919450906001600160401b03808211156200025c57600080fd5b818701915087601f8301126200027157600080fd5b81518181111562000286576200028662000096565b604051601f8201601f19908116603f01168101908382118183101715620002b157620002b162000096565b816040528281528a86848701011115620002ca57600080fd5b600093505b82841015620002ee5784840186015181850187015292850192620002cf565b60008684830101528097505050505050506200030d6040850162000207565b90509250925092565b6124ad80620003266000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80637c8e7bfe11610097578063e5326ab111610066578063e5326ab1146101fd578063e985e9c514610205578063f242432a1461024e578063fc94041e1461026157600080fd5b80637c8e7bfe146101b45780638296a2e8146101bc578063a22cb465146101c5578063bd269380146101d857600080fd5b80630e89341c116100d35780630e89341c1461014c5780632eb2c2d61461016c5780633c6c13ab146101815780634e1273f41461019457600080fd5b8062fdd58e146100f957806301ffc9a71461011f5780630518023714610142575b600080fd5b61010c610107366004611987565b610274565b6040519081526020015b60405180910390f35b61013261012d3660046119e2565b61033a565b6040519015158152602001610116565b60055461010c9081565b61015f61015a3660046119ff565b61041d565b6040516101169190611a68565b61017f61017a366004611be0565b6104fd565b005b61017f61018f366004611c8a565b6105ac565b6101a76101a2366004611d1a565b6108a2565b6040516101169190611e20565b60075461010c565b61010c60075481565b61017f6101d3366004611e41565b6109e0565b6101eb6101e63660046119ff565b6109ef565b60405161011696959493929190611e78565b61015f610b66565b610132610213366004611ed8565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b61017f61025c366004611f0b565b610bf4565b61017f61026f366004611f70565b610c9c565b600073ffffffffffffffffffffffffffffffffffffffff83166103045760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806103cd57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061033457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610334565b60008181526004602052604081208054606092919061043b90611fad565b80601f016020809104026020016040519081016040528092919081815260200182805461046790611fad565b80156104b45780601f10610489576101008083540402835291602001916104b4565b820191906000526020600020905b81548152906001019060200180831161049757829003601f168201915b5050505050905060008151116104d2576104cd83610d09565b6104f6565b6003816040516020016104e6929190612000565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff851633148061052657506105268533610213565b6105985760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016102fb565b6105a58585858585610d9d565b5050505050565b6008546040517f401853b70000000000000000000000000000000000000000000000000000000081526004810188905260009173ffffffffffffffffffffffffffffffffffffffff169063401853b790602401602060405180830381865afa15801561061c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064091906120a5565b90506001811515146106945760405162461bcd60e51b815260206004820152601860248201527f70726f706f73616c206973206e6f74206163636570746564000000000000000060448201526064016102fb565b600061069f60055490565b6040805160c0810182526007548152602081018381529181018a8152606082018a905273ffffffffffffffffffffffffffffffffffffffff8816608083015260a0820187905260098054600181018255600091909152825160069091027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af810191825593517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b08501559051939450909290917f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1019061077e9082612108565b506060820151600382015560808201516004820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117905560a082015160058201906107e89082612108565b50505061080633828760405180602001604052806000815250611089565b610814600580546001019055565b6008546040517f845c776d000000000000000000000000000000000000000000000000000000008152600481018a905273ffffffffffffffffffffffffffffffffffffffff9091169063845c776d90602401600060405180830381600087803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b505050505050505050505050565b6060815183511461091b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016102fb565b6000835167ffffffffffffffff81111561093757610937611a7b565b604051908082528060200260200182016040528015610960578160200160208202803683370190505b50905060005b84518110156109d8576109ab85828151811061098457610984612204565b602002602001015185838151811061099e5761099e612204565b6020026020010151610274565b8282815181106109bd576109bd612204565b60209081029190910101526109d181612262565b9050610966565b509392505050565b6109eb3383836111e0565b5050565b600981815481106109ff57600080fd5b9060005260206000209060060201600091509050806000015490806001015490806002018054610a2e90611fad565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a90611fad565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b50505050600383015460048401546005850180549495929473ffffffffffffffffffffffffffffffffffffffff909216935090610ae390611fad565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0f90611fad565b8015610b5c5780601f10610b3157610100808354040283529160200191610b5c565b820191906000526020600020905b815481529060010190602001808311610b3f57829003601f168201915b5050505050905086565b60068054610b7390611fad565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9f90611fad565b8015610bec5780601f10610bc157610100808354040283529160200191610bec565b820191906000526020600020905b815481529060010190602001808311610bcf57829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff8516331480610c1d5750610c1d8533610213565b610c8f5760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016102fb565b6105a58585858585611319565b6000610ca83384610274565b905060008111610cfa5760405162461bcd60e51b815260206004820152600d60248201527f6e6f7420746865206f776e65720000000000000000000000000000000000000060448201526064016102fb565b610d048383611523565b505050565b606060028054610d1890611fad565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4490611fad565b8015610d915780601f10610d6657610100808354040283529160200191610d91565b820191906000526020600020905b815481529060010190602001808311610d7457829003601f168201915b50505050509050919050565b8151835114610e145760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016102fb565b73ffffffffffffffffffffffffffffffffffffffff8416610e9d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016102fb565b3360005b8451811015610ff4576000858281518110610ebe57610ebe612204565b602002602001015190506000858381518110610edc57610edc612204565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015610f8f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016102fb565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b16825281208054849290610fd990849061229a565b9250508190555050505080610fed90612262565b9050610ea1565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161106b9291906122ad565b60405180910390a4611081818787878787611580565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166111125760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016102fb565b33600061111e8561179e565b9050600061112b8561179e565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b1684529091528120805487929061116a90849061229a565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111d7836000898989896117e9565b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112815760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016102fb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff84166113a25760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016102fb565b3360006113ae8561179e565b905060006113bb8561179e565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c168452909152902054858110156114615760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016102fb565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a168252812080548892906114ab90849061229a565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611518848a8a8a8a8a6117e9565b505050505050505050565b600082815260046020526040902061153b8282612108565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6115678461041d565b6040516115749190611a68565b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611081576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906115f790899089908890889088906004016122db565b6020604051808303816000875af1925050508015611632575060408051601f3d908101601f1916820190925261162f91810190612346565b60015b6116e75761163e612363565b806308c379a003611677575061165261237f565b8061165d5750611679565b8060405162461bcd60e51b81526004016102fb9190611a68565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016102fb565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c8100000000000000000000000000000000000000000000000000000000146111d75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016102fb565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106117d8576117d8612204565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611081576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e61906118609089908990889088908890600401612427565b6020604051808303816000875af192505050801561189b575060408051601f3d908101601f1916820190925261189891810190612346565b60015b6118a75761163e612363565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e6100000000000000000000000000000000000000000000000000000000146111d75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016102fb565b803573ffffffffffffffffffffffffffffffffffffffff8116811461198257600080fd5b919050565b6000806040838503121561199a57600080fd5b6119a38361195e565b946020939093013593505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146119df57600080fd5b50565b6000602082840312156119f457600080fd5b81356104f6816119b1565b600060208284031215611a1157600080fd5b5035919050565b60005b83811015611a33578181015183820152602001611a1b565b50506000910152565b60008151808452611a54816020860160208601611a18565b601f01601f19169290920160200192915050565b6020815260006104f66020830184611a3c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715611ad057611ad0611a7b565b6040525050565b600067ffffffffffffffff821115611af157611af1611a7b565b5060051b60200190565b600082601f830112611b0c57600080fd5b81356020611b1982611ad7565b604051611b268282611aaa565b83815260059390931b8501820192828101915086841115611b4657600080fd5b8286015b84811015611b615780358352918301918301611b4a565b509695505050505050565b600082601f830112611b7d57600080fd5b813567ffffffffffffffff811115611b9757611b97611a7b565b604051611bae6020601f19601f8501160182611aaa565b818152846020838601011115611bc357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611bf857600080fd5b611c018661195e565b9450611c0f6020870161195e565b9350604086013567ffffffffffffffff80821115611c2c57600080fd5b611c3889838a01611afb565b94506060880135915080821115611c4e57600080fd5b611c5a89838a01611afb565b93506080880135915080821115611c7057600080fd5b50611c7d88828901611b6c565b9150509295509295909350565b60008060008060008060c08789031215611ca357600080fd5b86359550602087013567ffffffffffffffff80821115611cc257600080fd5b611cce8a838b01611b6c565b96506040890135955060608901359450611cea60808a0161195e565b935060a0890135915080821115611d0057600080fd5b50611d0d89828a01611b6c565b9150509295509295509295565b60008060408385031215611d2d57600080fd5b823567ffffffffffffffff80821115611d4557600080fd5b818501915085601f830112611d5957600080fd5b81356020611d6682611ad7565b604051611d738282611aaa565b83815260059390931b8501820192828101915089841115611d9357600080fd5b948201945b83861015611db857611da98661195e565b82529482019490820190611d98565b96505086013592505080821115611dce57600080fd5b50611ddb85828601611afb565b9150509250929050565b600081518084526020808501945080840160005b83811015611e1557815187529582019590820190600101611df9565b509495945050505050565b6020815260006104f66020830184611de5565b80151581146119df57600080fd5b60008060408385031215611e5457600080fd5b611e5d8361195e565b91506020830135611e6d81611e33565b809150509250929050565b86815285602082015260c060408201526000611e9760c0830187611a3c565b85606084015273ffffffffffffffffffffffffffffffffffffffff8516608084015282810360a0840152611ecb8185611a3c565b9998505050505050505050565b60008060408385031215611eeb57600080fd5b611ef48361195e565b9150611f026020840161195e565b90509250929050565b600080600080600060a08688031215611f2357600080fd5b611f2c8661195e565b9450611f3a6020870161195e565b93506040860135925060608601359150608086013567ffffffffffffffff811115611f6457600080fd5b611c7d88828901611b6c565b60008060408385031215611f8357600080fd5b82359150602083013567ffffffffffffffff811115611fa157600080fd5b611ddb85828601611b6c565b600181811c90821680611fc157607f821691505b602082108103611ffa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080845461200e81611fad565b60018281168015612026576001811461205957612088565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450612088565b8860005260208060002060005b8581101561207f5781548a820152908401908201612066565b50505082870194505b50505050835161209c818360208801611a18565b01949350505050565b6000602082840312156120b757600080fd5b81516104f681611e33565b601f821115610d0457600081815260208120601f850160051c810160208610156120e95750805b601f850160051c820191505b81811015611081578281556001016120f5565b815167ffffffffffffffff81111561212257612122611a7b565b612136816121308454611fad565b846120c2565b602080601f83116001811461218957600084156121535750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611081565b600085815260208120601f198616915b828110156121b857888601518255948401946001909101908401612199565b50858210156121f457878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361229357612293612233565b5060010190565b8082018082111561033457610334612233565b6040815260006122c06040830185611de5565b82810360208401526122d28185611de5565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261231460a0830186611de5565b82810360608401526123268186611de5565b9050828103608084015261233a8185611a3c565b98975050505050505050565b60006020828403121561235857600080fd5b81516104f6816119b1565b600060033d111561237c5760046000803e5060005160e01c5b90565b600060443d101561238d5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156123db57505050505090565b82850191508151818111156123f35750505050505090565b843d870101602082850101111561240d5750505050505090565b61241c60208286010187611aaa565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261246c60a0830184611a3c565b97965050505050505056fea2646970667358221220fc9b6df4963298f6fb8abdefd2f2f59c84c3baa2417f616b9f15735a2b5d8f5d64736f6c6343000811003360806040523480156200001157600080fd5b506040516200257538038062002575833981016040819052620000349162000148565b828260006200004483826200026d565b5060016200005382826200026d565b505050600a939093555050600b80546001600160a01b0319166001600160a01b0390921691909117905562000339565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ab57600080fd5b81516001600160401b0380821115620000c857620000c862000083565b604051601f8301601f19908116603f01168101908282118183101715620000f357620000f362000083565b816040528381526020925086838588010111156200011057600080fd5b600091505b8382101562000134578582018301518183018401529082019062000115565b600093810190920192909252949350505050565b600080600080608085870312156200015f57600080fd5b845160208601519094506001600160401b03808211156200017f57600080fd5b6200018d8883890162000099565b94506040870151915080821115620001a457600080fd5b50620001b38782880162000099565b606087015190935090506001600160a01b0381168114620001d357600080fd5b939692955090935050565b600181811c90821680620001f357607f821691505b6020821081036200021457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026857600081815260208120601f850160051c81016020861015620002435750805b601f850160051c820191505b8181101562000264578281556001016200024f565b5050505b505050565b81516001600160401b0381111562000289576200028962000083565b620002a1816200029a8454620001de565b846200021a565b602080601f831160018114620002d95760008415620002c05750858301515b600019600386901b1c1916600185901b17855562000264565b600085815260208120601f198616915b828110156200030a57888601518255948401946001909101908401620002e9565b5085821015620003295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61222c80620003496000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610231578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461026a57600080fd5b80636352211e146101e057806370a08231146101f3578063777f09e21461020657806395d89b411461022957600080fd5b8063095ea7b3116100d3578063095ea7b31461019257806323b872dd146101a75780633ab6ad61146101ba57806342842e0e146101cd57600080fd5b806301ffc9a714610105578063051802371461012d57806306fdde0314610145578063081812fc1461015a575b600080fd5b610118610113366004611afa565b6102b3565b60405190151581526020015b60405180910390f35b6007546101379081565b604051908152602001610124565b61014d610398565b6040516101249190611b85565b61016d610168366004611b98565b61042a565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b6101a56101a0366004611bda565b61045e565b005b6101a56101b5366004611c04565b6105e6565b6101a56101c8366004611d23565b61066d565b6101a56101db366004611c04565b610919565b61016d6101ee366004611b98565b610934565b610137610201366004611de9565b6109a6565b610219610214366004611b98565b610a5a565b6040516101249493929190611e04565b61014d610baa565b6101a561023f366004611e4e565b610bb9565b6101a5610252366004611e85565b610bc8565b61014d610265366004611b98565b610c56565b610118610278366004611f01565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061034657507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061039257507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546103a790611f34565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611f34565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b5050505050905090565b600061043582610d66565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061046982610934565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105115760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480610565575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6105d75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610508565b6105e18383610dda565b505050565b6105f03382610e7a565b6106625760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610508565b6105e1838383610f39565b600b546040517f401853b70000000000000000000000000000000000000000000000000000000081526004810187905260009173ffffffffffffffffffffffffffffffffffffffff169063401853b790602401602060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107019190611f87565b90506001811515146107555760405162461bcd60e51b815260206004820152601860248201527f70726f706f73616c206973206e6f7420616363657074656400000000000000006044820152606401610508565b600061076060075490565b60408051608081018252600a5481526020810183815291810189815260608201879052600c8054600181018255600091909152825160049091027fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7810191825593517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c88501559051939450909290917fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c9019061081c9082611ff2565b50606082015160038201906108319082611ff2565b50505061083e33826111f3565b61087e8186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113d892505050565b61088c600780546001019055565b600b546040517f259a44660000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff9091169063259a446690602401600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b5050505050505050505050565b6105e183838360405180602001604052806000815250610bc8565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103925760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610508565b600073ffffffffffffffffffffffffffffffffffffffff8216610a315760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610508565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b600c8181548110610a6a57600080fd5b9060005260206000209060040201600091509050806000015490806001015490806002018054610a9990611f34565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac590611f34565b8015610b125780601f10610ae757610100808354040283529160200191610b12565b820191906000526020600020905b815481529060010190602001808311610af557829003601f168201915b505050505090806003018054610b2790611f34565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5390611f34565b8015610ba05780601f10610b7557610100808354040283529160200191610ba0565b820191906000526020600020905b815481529060010190602001808311610b8357829003601f168201915b5050505050905084565b6060600180546103a790611f34565b610bc4338383611487565b5050565b610bd23383610e7a565b610c445760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610508565b610c508484848461159a565b50505050565b6060610c6182610d66565b60008281526006602052604081208054610c7a90611f34565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca690611f34565b8015610cf35780601f10610cc857610100808354040283529160200191610cf3565b820191906000526020600020905b815481529060010190602001808311610cd657829003601f168201915b505050505090506000610d1160408051602081019091526000815290565b90508051600003610d23575092915050565b815115610d55578082604051602001610d3d92919061210c565b60405160208183030381529060405292505050919050565b610d5e84611623565b949350505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16610dd75760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610508565b50565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610e3482610934565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e8683610934565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ef4575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610d5e57508373ffffffffffffffffffffffffffffffffffffffff16610f1a8461042a565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610f5982610934565b73ffffffffffffffffffffffffffffffffffffffff1614610fe25760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610508565b73ffffffffffffffffffffffffffffffffffffffff821661106a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610508565b6110778383836001611697565b8273ffffffffffffffffffffffffffffffffffffffff1661109782610934565b73ffffffffffffffffffffffffffffffffffffffff16146111205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610508565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff82166112565760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610508565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156112c85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610508565b6112d6600083836001611697565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16156113485760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610508565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008281526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1661146f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610508565b60008281526006602052604090206105e18282611ff2565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115025760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610508565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6115a5848484610f39565b6115b184848484611753565b610c505760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610508565b606061162e82610d66565b600061164560408051602081019091526000815290565b905060008151116116655760405180602001604052806000815250611690565b8061166f8461192c565b60405160200161168092919061210c565b6040516020818303038152906040525b9392505050565b6001811115610c505773ffffffffffffffffffffffffffffffffffffffff8416156116f75773ffffffffffffffffffffffffffffffffffffffff8416600090815260036020526040812080548392906116f190849061216a565b90915550505b73ffffffffffffffffffffffffffffffffffffffff831615610c505773ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805483929061174890849061217d565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611921576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a02906117ca903390899088908890600401612190565b6020604051808303816000875af1925050508015611823575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611820918101906121d9565b60015b6118d6573d808015611851576040519150601f19603f3d011682016040523d82523d6000602084013e611856565b606091505b5080516000036118ce5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610508565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610d5e565b506001949350505050565b60606000611939836119ea565b600101905060008167ffffffffffffffff81111561195957611959611c40565b6040519080825280601f01601f191660200182016040528015611983576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461198d57509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a33577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611a5f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611a7d57662386f26fc10000830492506010015b6305f5e1008310611a95576305f5e100830492506008015b6127108310611aa957612710830492506004015b60648310611abb576064830492506002015b600a83106103925760010192915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd757600080fd5b600060208284031215611b0c57600080fd5b813561169081611acc565b60005b83811015611b32578181015183820152602001611b1a565b50506000910152565b60008151808452611b53816020860160208601611b17565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006116906020830184611b3b565b600060208284031215611baa57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bd557600080fd5b919050565b60008060408385031215611bed57600080fd5b611bf683611bb1565b946020939093013593505050565b600080600060608486031215611c1957600080fd5b611c2284611bb1565b9250611c3060208501611bb1565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611c8a57611c8a611c40565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611cd057611cd0611c40565b81604052809350858152868686011115611ce957600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d1457600080fd5b61169083833560208501611c6f565b600080600080600060808688031215611d3b57600080fd5b85359450602086013567ffffffffffffffff80821115611d5a57600080fd5b611d6689838a01611d03565b95506040880135915080821115611d7c57600080fd5b818801915088601f830112611d9057600080fd5b813581811115611d9f57600080fd5b896020828501011115611db157600080fd5b602083019550809450506060880135915080821115611dcf57600080fd5b50611ddc88828901611d03565b9150509295509295909350565b600060208284031215611dfb57600080fd5b61169082611bb1565b848152836020820152608060408201526000611e236080830185611b3b565b8281036060840152611e358185611b3b565b979650505050505050565b8015158114610dd757600080fd5b60008060408385031215611e6157600080fd5b611e6a83611bb1565b91506020830135611e7a81611e40565b809150509250929050565b60008060008060808587031215611e9b57600080fd5b611ea485611bb1565b9350611eb260208601611bb1565b925060408501359150606085013567ffffffffffffffff811115611ed557600080fd5b8501601f81018713611ee657600080fd5b611ef587823560208401611c6f565b91505092959194509250565b60008060408385031215611f1457600080fd5b611f1d83611bb1565b9150611f2b60208401611bb1565b90509250929050565b600181811c90821680611f4857607f821691505b602082108103611f81577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611f9957600080fd5b815161169081611e40565b601f8211156105e157600081815260208120601f850160051c81016020861015611fcb5750805b601f850160051c820191505b81811015611fea57828155600101611fd7565b505050505050565b815167ffffffffffffffff81111561200c5761200c611c40565b6120208161201a8454611f34565b84611fa4565b602080601f831160018114612073576000841561203d5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611fea565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156120c0578886015182559484019460019091019084016120a1565b50858210156120fc57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6000835161211e818460208801611b17565b835190830190612132818360208801611b17565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156103925761039261213b565b808201808211156103925761039261213b565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526121cf6080830184611b3b565b9695505050505050565b6000602082840312156121eb57600080fd5b815161169081611acc56fea2646970667358221220ebfcc02a9cadf9cfc9e1502ef79a83350fc3302e43f4fe9b9df7baa4d913b0b864736f6c63430008110033a264697066735822122013c95c2f9d44dac780784c00b8d4ea56bafa8211df989e6593c80b32d42dbb0f64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:21",
                "type": ""
              }
            ],
            "src": "14:290:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10353:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:21",
                "type": ""
              }
            ],
            "src": "14:177:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:125:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "307:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "319:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "330:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "307:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "364:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "372:42:21",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:55:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "342:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:74:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "342:74:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "266:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "277:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "288:4:21",
                "type": ""
              }
            ],
            "src": "196:226:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "459:152:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "476:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "479:77:21",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "469:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "469:88:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "469:88:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "573:1:21",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "576:4:21",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "566:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "566:15:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "597:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "600:4:21",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "590:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "590:15:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "590:15:21"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "427:184:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "669:725:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "727:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "730:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "697:6:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "705:4:21",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "693:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "693:17:21"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "712:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "689:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:27:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "682:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "682:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "679:55:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "743:30:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "766:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "753:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "753:20:21"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "747:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "782:28:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "792:18:21",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "786:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "833:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "835:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "835:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "835:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "825:2:21"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "829:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "822:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:10:21"
                  },
                  "nodeType": "YulIf",
                  "src": "819:36:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "864:76:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "874:66:21",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "868:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "949:23:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "969:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "963:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "963:9:21"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "953:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "981:71:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1003:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1027:2:21"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1031:4:21",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1023:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1023:13:21"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1038:2:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1019:22:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1043:2:21",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1015:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1015:31:21"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1048:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1011:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1011:40:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "999:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:53:21"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "985:10:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1111:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1113:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1113:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1113:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1070:10:21"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1082:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1067:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1067:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1090:10:21"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1087:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1064:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:46:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:72:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1149:2:21",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1153:10:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1142:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:22:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1142:22:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1180:6:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1188:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:18:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:18:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1239:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1248:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1251:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1241:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1241:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1214:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1222:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1210:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1210:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1227:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1206:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:26:21"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1234:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1203:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1203:35:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1200:55:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1289:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:17:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1300:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1308:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1296:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1296:17:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1315:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1264:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:54:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1264:54:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1342:6:21"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1350:2:21"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1338:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1338:15:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1355:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1334:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1334:26:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1362:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:37:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:37:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1373:15:21",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1382:6:21"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1373:5:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "643:6:21",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "651:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "659:5:21",
                "type": ""
              }
            ],
            "src": "616:778:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1533:609:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1579:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1588:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1591:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1581:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1581:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1581:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1554:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1563:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1550:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1550:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1546:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1543:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1604:37:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1618:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1618:23:21"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1608:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1650:28:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1660:18:21",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1654:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1705:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1714:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1717:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1707:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1707:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1707:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1693:6:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1701:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1690:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:14:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1687:34:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:60:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1762:9:21"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1773:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1758:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:22:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1782:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1740:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:50:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1730:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1799:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1815:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:32:21"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1803:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1876:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1885:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1888:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1878:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1878:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1878:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1862:8:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1872:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1859:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1859:16:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1856:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1901:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1933:9:21"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1944:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1929:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1929:24:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1955:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1911:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1901:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1972:48:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2005:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2016:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2001:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2001:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1988:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1988:32:21"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "1976:8:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2049:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2058:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2061:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2051:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2051:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2051:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "2035:8:21"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2045:2:21"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2032:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:16:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2029:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2074:62:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:21"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "2117:8:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:24:21"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2128:7:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2084:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:52:21"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2074:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1483:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1494:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1506:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1514:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1522:6:21",
                "type": ""
              }
            ],
            "src": "1399:743:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2276:198:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2298:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2309:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2294:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2286:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2321:52:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2331:42:21",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2325:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2389:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2404:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2412:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2400:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2400:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2382:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:34:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2382:34:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2436:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2447:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2432:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2432:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2456:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2464:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2452:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2425:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2425:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2237:9:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2248:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2256:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2267:4:21",
                "type": ""
              }
            ],
            "src": "2147:327:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2549:239:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2595:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2604:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2607:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2597:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2597:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2597:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2570:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2579:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2566:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2566:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2591:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2562:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2559:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2620:36:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2646:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2633:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2633:23:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2624:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2742:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2751:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2754:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2744:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2744:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2744:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2678:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2689:5:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2696:42:21",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2685:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2685:54:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2675:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:65:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:73:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2665:93:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2767:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2777:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2515:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2526:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2538:6:21",
                "type": ""
              }
            ],
            "src": "2479:309:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:110:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2909:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2918:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2921:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2911:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2911:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2911:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2884:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2893:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2880:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2880:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2905:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2876:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "2873:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2934:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2957:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2944:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2829:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2840:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2852:6:21",
                "type": ""
              }
            ],
            "src": "2793:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3044:184:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3054:10:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3063:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3058:1:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3123:63:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3148:3:21"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3153:1:21"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3144:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3144:11:21"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3167:3:21"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3172:1:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3163:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3163:11:21"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3157:5:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3157:18:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3137:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3137:39:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3137:39:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3084:1:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3087:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3081:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3081:13:21"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3095:19:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3097:15:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3106:1:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3109:2:21",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3102:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3102:10:21"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3097:1:21"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3077:3:21",
                    "statements": []
                  },
                  "src": "3073:113:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3206:3:21"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3211:6:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3202:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:16:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:1:21",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3195:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3195:27:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3195:27:21"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3022:3:21",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3027:3:21",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3032:6:21",
                "type": ""
              }
            ],
            "src": "2978:250:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:280:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3293:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3313:5:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3307:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3307:12:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3297:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3335:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3340:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3328:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3328:19:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3328:19:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3395:5:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3402:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3391:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3391:16:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3413:3:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3418:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3409:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3409:14:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3425:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3356:34:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:76:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3356:76:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3441:116:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3456:3:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3469:6:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3477:2:21",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3465:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3465:15:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3482:66:21",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3461:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3461:88:21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3452:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3452:98:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3552:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3448:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:109:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3441:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3260:5:21",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3267:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3275:3:21",
                "type": ""
              }
            ],
            "src": "3233:330:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3773:309:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3790:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3801:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3783:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3783:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3783:25:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3828:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3839:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3824:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3824:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3844:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3817:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3817:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3817:31:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3857:54:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3883:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3906:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3891:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3865:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:46:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3857:4:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3920:52:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3930:42:21",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3924:2:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3992:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4003:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3988:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3988:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4012:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4020:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4008:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4008:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3981:43:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4044:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4055:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4040:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4040:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4064:6:21"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4072:2:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4060:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4060:15:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4033:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:43:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:43:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address_t_address__to_t_uint256_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3718:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3729:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3737:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3745:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3753:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3764:4:21",
                "type": ""
              }
            ],
            "src": "3568:514:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4261:224:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4278:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4289:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4271:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4271:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4312:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4323:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4308:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4308:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4328:2:21",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4351:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4362:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4347:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4347:18:21"
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d652073686f756c64206e6f74206265206e75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4367:34:21",
                        "type": "",
                        "value": "collection name should not be nu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4340:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4340:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4340:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4422:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4433:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4418:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4418:18:21"
                      },
                      {
                        "hexValue": "6c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4438:4:21",
                        "type": "",
                        "value": "ll"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4411:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:32:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4411:32:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4452:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4464:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4475:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4460:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4460:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4452:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef681e6ba8045900f0e163bb9f4f8932bd2a5bb5a3c6e1ac8dfbebb4d325ebca__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4238:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4252:4:21",
                "type": ""
              }
            ],
            "src": "4087:398:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4664:223:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4674:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4674:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4715:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4726:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4711:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4711:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4731:2:21",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4704:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4704:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4754:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4765:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4750:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4750:18:21"
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e205552492073686f756c64206e6f74206265206e756c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4770:34:21",
                        "type": "",
                        "value": "collection URI should not be nul"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4743:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4743:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4743:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4825:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4836:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4821:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4821:18:21"
                      },
                      {
                        "hexValue": "6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4841:3:21",
                        "type": "",
                        "value": "l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4814:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4814:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4814:31:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4854:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4866:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4877:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4862:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4862:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4854:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_592a8dc0d9cbf7769378a3c2e6cd0a001b76323093a3db9763b3ed3a71519bde__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4641:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4655:4:21",
                "type": ""
              }
            ],
            "src": "4490:397:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5031:150:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5041:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5061:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5055:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5055:13:21"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5045:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5116:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5124:4:21",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5112:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5112:17:21"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5131:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5136:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "5077:34:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5077:66:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5077:66:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5152:23:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5163:3:21"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5168:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5159:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:16:21"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5152:3:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5007:3:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5012:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5023:3:21",
                "type": ""
              }
            ],
            "src": "4892:289:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5360:176:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5377:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5388:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5370:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5370:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5370:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5411:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5422:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5407:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5407:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5427:2:21",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5400:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5400:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5400:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5450:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5461:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5446:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5446:18:21"
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e20616c72656164792063726561746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5466:28:21",
                        "type": "",
                        "value": "collection already created"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5439:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:56:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5439:56:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5504:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5516:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5527:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5512:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5504:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e6a7938f695a31d86d67f1b5df8e97c4841ff39f7ab180b6f1fa881ba47f7334__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5337:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5351:4:21",
                "type": ""
              }
            ],
            "src": "5186:350:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5718:234:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5735:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5746:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5728:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5728:25:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5773:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5784:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5769:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5769:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5789:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5762:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5762:30:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5801:53:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5827:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5839:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5850:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5835:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5835:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "5809:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5809:45:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5801:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5874:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5885:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5870:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5870:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5894:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5902:42:21",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5890:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5890:55:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5863:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5863:83:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5863:83:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5671:9:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5682:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5690:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5698:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5709:4:21",
                "type": ""
              }
            ],
            "src": "5541:411:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6182:351:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6199:9:21"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6210:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6192:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:25:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6192:25:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6237:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6248:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6233:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6233:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6253:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6226:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:31:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6226:31:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6266:60:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6298:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6321:3:21",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:19:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6280:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6280:46:21"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6270:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6346:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6357:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6342:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6342:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6366:6:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6374:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6362:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6362:22:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6335:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:50:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6335:50:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6394:41:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6420:6:21"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6428:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6402:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:33:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6394:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6455:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6466:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6451:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6451:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6475:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6483:42:21",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6471:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6471:55:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6444:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6444:83:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6444:83:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6127:9:21",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6138:6:21",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6146:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6154:6:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6162:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6173:4:21",
                "type": ""
              }
            ],
            "src": "5957:576:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6593:382:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6603:22:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6617:1:21",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6620:4:21"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "6613:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6613:12:21"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6603:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6634:38:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6664:4:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6670:1:21",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6660:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:12:21"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6638:18:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6711:31:21",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6713:27:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6727:6:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6735:4:21",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6723:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6723:17:21"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6713:6:21"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6691:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6684:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:26:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6681:61:21"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6801:168:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6822:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6825:77:21",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6815:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6815:88:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6815:88:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6923:1:21",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6926:4:21",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6916:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6916:15:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6916:15:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6951:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6954:4:21",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6944:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6944:15:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6944:15:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6757:18:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6780:6:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6788:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6777:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6777:14:21"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6754:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6754:38:21"
                  },
                  "nodeType": "YulIf",
                  "src": "6751:218:21"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6573:4:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6582:6:21",
                "type": ""
              }
            ],
            "src": "6538:437:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7036:65:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7053:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "7056:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7046:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7046:14:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7046:14:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7069:26:21",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7087:1:21",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7090:4:21",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "7077:9:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7077:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "7069:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "7019:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7027:4:21",
                "type": ""
              }
            ],
            "src": "6980:121:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7187:464:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7220:425:21",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7234:11:21",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7244:1:21",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "7238:2:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7265:2:21"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "7269:5:21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7258:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7258:17:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7258:17:21"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7288:31:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7310:2:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7314:4:21",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "7300:9:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7300:19:21"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7292:4:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7332:57:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "7355:4:21"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7365:1:21",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "7372:10:21"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7384:2:21",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7368:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7368:19:21"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "7361:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7361:27:21"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7351:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7351:38:21"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "7336:11:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7426:23:21",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7428:19:21",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "7443:4:21"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7428:11:21"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "7408:10:21"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7420:4:21",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "7405:2:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7405:20:21"
                        },
                        "nodeType": "YulIf",
                        "src": "7402:47:21"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7462:41:21",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "7476:4:21"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7486:1:21",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "7493:3:21"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7498:2:21",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7489:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7489:12:21"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "7482:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7482:20:21"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7472:3:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7472:31:21"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "7466:2:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7516:24:21",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "7529:11:21"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "7520:5:21",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7614:21:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "7623:5:21"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7630:2:21"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7616:6:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7616:17:21"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7616:17:21"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "7564:5:21"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "7571:2:21"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "7561:2:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7561:13:21"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "7575:26:21",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7577:22:21",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "7590:5:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7597:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7586:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7586:13:21"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "7577:5:21"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "7557:3:21",
                          "statements": []
                        },
                        "src": "7553:82:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "7203:3:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7208:2:21",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7200:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7200:11:21"
                  },
                  "nodeType": "YulIf",
                  "src": "7197:448:21"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "7159:5:21",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "7166:3:21",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "7171:10:21",
                "type": ""
              }
            ],
            "src": "7106:545:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7741:141:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7751:125:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "7766:4:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7784:1:21",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "7787:3:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7780:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7780:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7793:66:21",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7776:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7776:84:21"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7772:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7772:89:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7762:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7762:100:21"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7868:1:21",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "7871:3:21"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7864:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7864:11:21"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7759:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:117:21"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "7751:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7718:4:21",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "7724:3:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "7732:4:21",
                "type": ""
              }
            ],
            "src": "7656:226:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7983:1375:21",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7993:24:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "8013:3:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8007:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8007:10:21"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "7997:6:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8060:22:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8062:16:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8062:18:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8062:18:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "8032:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8040:18:21",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8029:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8029:30:21"
                  },
                  "nodeType": "YulIf",
                  "src": "8026:56:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "8135:4:21"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "8173:4:21"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "8167:5:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8167:11:21"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "8141:25:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8141:38:21"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "8181:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "8091:43:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8091:97:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8091:97:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8197:18:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8214:1:21",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "8201:9:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8224:23:21",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8243:4:21",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "8228:11:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8256:24:21",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "8269:11:21"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "8256:9:21"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8326:775:21",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8340:94:21",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "8359:6:21"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8367:66:21",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "8355:3:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8355:79:21"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "8344:7:21",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8447:49:21",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "8491:4:21"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "8461:29:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8461:35:21"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "8451:6:21",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "8509:10:21",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8518:1:21",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "8513:1:21",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "8596:172:21",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8621:6:21"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "8639:3:21"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "8644:9:21"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8635:3:21"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8635:19:21"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "8629:5:21"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8629:26:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "8614:6:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8614:42:21"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8614:42:21"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8673:24:21",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8687:6:21"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8695:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8683:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8683:14:21"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "8673:6:21"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8714:40:21",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8731:9:21"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8742:11:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8727:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8727:27:21"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "8714:9:21"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8543:1:21"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "8546:7:21"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "8540:2:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8540:14:21"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "8555:28:21",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8557:24:21",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "8566:1:21"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8569:11:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8562:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8562:19:21"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8557:1:21"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "8536:3:21",
                              "statements": []
                            },
                            "src": "8532:236:21"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "8816:226:21",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8834:43:21",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "8861:3:21"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8866:9:21"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8857:3:21"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8857:19:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "8851:5:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8851:26:21"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "8838:9:21",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8901:6:21"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "8913:9:21"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "8940:1:21",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "8943:6:21"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "8936:3:21"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "8936:14:21"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "8952:3:21",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8932:3:21"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "8932:24:21"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "8958:66:21",
                                                    "type": "",
                                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8928:3:21"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "8928:97:21"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "8924:3:21"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8924:102:21"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "8909:3:21"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8909:118:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "8894:6:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8894:134:21"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8894:134:21"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "8787:7:21"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "8796:6:21"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "8784:2:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8784:19:21"
                            },
                            "nodeType": "YulIf",
                            "src": "8781:261:21"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "9062:4:21"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9076:1:21",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "9079:6:21"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "9072:3:21"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9072:14:21"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9088:1:21",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9068:3:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9068:22:21"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "9055:6:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9055:36:21"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9055:36:21"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "8319:782:21",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8324:1:21",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9118:234:21",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "9132:14:21",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9145:1:21",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "9136:5:21",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9181:67:21",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9199:35:21",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "9218:3:21"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9223:9:21"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9214:3:21"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9214:19:21"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9208:5:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9208:26:21"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "9199:5:21"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "9162:6:21"
                            },
                            "nodeType": "YulIf",
                            "src": "9159:89:21"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "9268:4:21"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "9327:5:21"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "9334:6:21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "9274:52:21"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9274:67:21"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "9261:6:21"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9261:81:21"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9261:81:21"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9110:242:21",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "8299:6:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8307:2:21",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8296:2:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8296:14:21"
                  },
                  "nodeType": "YulSwitch",
                  "src": "8289:1063:21"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "7968:4:21",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7974:3:21",
                "type": ""
              }
            ],
            "src": "7887:1471:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9484:99:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9501:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9512:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9494:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9494:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9494:21:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9524:53:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9550:6:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9562:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9573:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9558:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9558:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "9532:17:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9532:45:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9524:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9453:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9464:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9475:4:21",
                "type": ""
              }
            ],
            "src": "9363:220:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9762:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9779:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9790:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9772:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9772:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9772:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9813:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9824:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9809:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9809:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9829:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9802:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9802:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9802:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9852:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9863:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9848:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9848:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9868:34:21",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9841:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9841:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9841:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9923:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9934:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9919:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9919:18:21"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9939:8:21",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9912:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9912:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9912:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9957:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9969:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9980:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9965:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9965:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9957:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9739:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9753:4:21",
                "type": ""
              }
            ],
            "src": "9588:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10169:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10186:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10197:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10179:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10179:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10179:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10220:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10231:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10216:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10216:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10236:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10209:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10209:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10209:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10259:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10270:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10255:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10255:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10275:34:21",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10248:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10248:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10248:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10319:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10331:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10342:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10327:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10327:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10319:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10146:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10160:4:21",
                "type": ""
              }
            ],
            "src": "9995:356:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address_t_address__to_t_uint256_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_string(value1, add(headStart, 128))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_ef681e6ba8045900f0e163bb9f4f8932bd2a5bb5a3c6e1ac8dfbebb4d325ebca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"collection name should not be nu\")\n        mstore(add(headStart, 96), \"ll\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_592a8dc0d9cbf7769378a3c2e6cd0a001b76323093a3db9763b3ed3a71519bde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"collection URI should not be nul\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_e6a7938f695a31d86d67f1b5df8e97c4841ff39f7ab180b6f1fa881ba47f7334__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"collection already created\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "658:2935:0:-:0;;;1471:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:3;719:10:15;936:18:3;:32::i;:::-;1514:18:0;:32;;-1:-1:-1;;;;;1514:32:0;;;-1:-1:-1;;;;;;1514:32:0;;;;;;;;1556:13;:43;;;;;;;;658:2935;;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;658:2935:0;;;;;;",
  "deployedSourceMap": "658:2935:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:27;;;;;;;;;;160:25:21;;;148:2;133:18;733:27:0;;;;;;;;1831:101:3;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;1273:6;;;;342:74:21;;330:2;315:18;1201:85:3;196:226:21;1954:1637:0;;;;;;:::i;:::-;;:::i;:::-;;;;2331:42:21;2400:15;;;2382:34;;2452:15;;;;2447:2;2432:18;;2425:43;2294:18;1954:1637:0;2147:327:21;2081:198:3;;;;;;:::i;:::-;;:::i;1178:31:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1954:1637:0:-;2156:23;2181:22;1094:13:3;:11;:13::i;:::-;2272:1:0::1;2246:15;2240:29;:33;2219:114;;;::::0;::::1;::::0;;4289:2:21;2219:114:0::1;::::0;::::1;4271:21:21::0;4328:2;4308:18;;;4301:30;4367:34;4347:18;;;4340:62;4438:4;4418:18;;;4411:32;4460:19;;2219:114:0::1;;;;;;;;;2395:1;2370:14;2364:28;:32;2343:112;;;::::0;::::1;::::0;;4692:2:21;2343:112:0::1;::::0;::::1;4674:21:21::0;4731:2;4711:18;;;4704:30;4770:34;4750:18;;;4743:62;4841:3;4821:18;;;4814:31;4862:19;;2343:112:0::1;4490:397:21::0;2343:112:0::1;2486:14;2501:15;2486:31;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;:40;2465:113;;;::::0;::::1;::::0;;5388:2:21;2465:113:0::1;::::0;::::1;5370:21:21::0;5427:2;5407:18;;;5400:30;5466:28;5446:18;;;5439:56;5512:18;;2465:113:0::1;5186:350:21::0;2465:113:0::1;2589:23;2644:13;:3;918:14:16::0;;827:112;2644:13:0::1;2699:18;::::0;2615:112:::1;::::0;2671:14;;2699:18:::1;;::::0;2615:112:::1;::::0;::::1;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2589:138;;2737:21;2789:13;:3;918:14:16::0;;827:112;2789:13:0::1;2876:18;::::0;2761:143:::1;::::0;2816:15;;2845:17;;2876:18:::1;::::0;;::::1;::::0;2761:143:::1;::::0;::::1;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2737:167;;2915:31;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2915:31:0::1;2986:3;918:14:16::0;;2956:43:0;;3009:19:::1;::::0;::::1;:37:::0;;;3056:63:::1;::::0;;::::1;:40;::::0;::::1;:63:::0;3129:61;::::1;:39;::::0;::::1;:61:::0;3200:11:::1;:31:::0;;;;::::1;::::0;;-1:-1:-1;3200:31:0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;2956:43;;3200:31;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3200:31:0::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3242:13:::1;::::0;;:40;;;;;:13;;;::::1;::::0;:23:::1;::::0;:40:::1;::::0;3266:15;;3242:40:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3327:4;3293:14;3308:15;3293:31;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:38;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3347:150:::1;3378:13;3293:38:::0;918:14:16;;827:112;3378:13:0::1;3405:15;3442:11;3476:10;3347:150;;;;;;;;;:::i;:::-;;;;;;;;3508:15;:3;1032:19:16::0;;1050:1;1032:19;;;945:123;3508:15:0::1;-1:-1:-1::0;3550:11:0;;;;-1:-1:-1;1954:1637:0;-1:-1:-1;;;;1954:1637:0:o;2081:198:3:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;9790:2:21;2161:73:3::1;::::0;::::1;9772:21:21::0;9829:2;9809:18;;;9802:30;9868:34;9848:18;;;9841:62;9939:8;9919:18;;;9912:36;9965:19;;2161:73:3::1;9588:402:21::0;2161:73:3::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1178:31:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1178:31:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1178:31:0;;;;;;;;;;;;;;;;;;-1:-1:-1;1178:31:0;:::o;1359:130:3:-;1247:7;1273:6;1422:23;1273:6;719:10:15;1422:23:3;1414:68;;;;;;;10197:2:21;1414:68:3;;;10179:21:21;;;10216:18;;;10209:30;10275:34;10255:18;;;10248:62;10327:18;;1414:68:3;9995:356:21;2433:187:3;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;427:184:21:-;479:77;476:1;469:88;576:4;573:1;566:15;600:4;597:1;590:15;616:778;659:5;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;766:6;753:20;792:18;829:2;825;822:10;819:36;;;835:18;;:::i;:::-;969:2;963:9;1031:4;1023:13;;874:66;1019:22;;;1043:2;1015:31;1011:40;999:53;;;1067:18;;;1087:22;;;1064:46;1061:72;;;1113:18;;:::i;:::-;1153:10;1149:2;1142:22;1188:2;1180:6;1173:18;1234:3;1227:4;1222:2;1214:6;1210:15;1206:26;1203:35;1200:55;;;1251:1;1248;1241:12;1200:55;1315:2;1308:4;1300:6;1296:17;1289:4;1281:6;1277:17;1264:54;1362:1;1355:4;1350:2;1342:6;1338:15;1334:26;1327:37;1382:6;1373:15;;;;;;616:778;;;;:::o;1399:743::-;1506:6;1514;1522;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1631:9;1618:23;1660:18;1701:2;1693:6;1690:14;1687:34;;;1717:1;1714;1707:12;1687:34;1740:50;1782:7;1773:6;1762:9;1758:22;1740:50;:::i;:::-;1730:60;;1843:2;1832:9;1828:18;1815:32;1799:48;;1872:2;1862:8;1859:16;1856:36;;;1888:1;1885;1878:12;1856:36;1911:52;1955:7;1944:8;1933:9;1929:24;1911:52;:::i;:::-;1901:62;;2016:2;2005:9;2001:18;1988:32;1972:48;;2045:2;2035:8;2032:16;2029:36;;;2061:1;2058;2051:12;2029:36;;2084:52;2128:7;2117:8;2106:9;2102:24;2084:52;:::i;:::-;2074:62;;;1399:743;;;;;:::o;2479:309::-;2538:6;2591:2;2579:9;2570:7;2566:23;2562:32;2559:52;;;2607:1;2604;2597:12;2559:52;2646:9;2633:23;2696:42;2689:5;2685:54;2678:5;2675:65;2665:93;;2754:1;2751;2744:12;2665:93;2777:5;2479:309;-1:-1:-1;;;2479:309:21:o;2793:180::-;2852:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;-1:-1:-1;2944:23:21;;2793:180;-1:-1:-1;2793:180:21:o;2978:250::-;3063:1;3073:113;3087:6;3084:1;3081:13;3073:113;;;3163:11;;;3157:18;3144:11;;;3137:39;3109:2;3102:10;3073:113;;;-1:-1:-1;;3220:1:21;3202:16;;3195:27;2978:250::o;3233:330::-;3275:3;3313:5;3307:12;3340:6;3335:3;3328:19;3356:76;3425:6;3418:4;3413:3;3409:14;3402:4;3395:5;3391:16;3356:76;:::i;:::-;3477:2;3465:15;3482:66;3461:88;3452:98;;;;3552:4;3448:109;;3233:330;-1:-1:-1;;3233:330:21:o;3568:514::-;3801:6;3790:9;3783:25;3844:3;3839:2;3828:9;3824:18;3817:31;3764:4;3865:46;3906:3;3895:9;3891:19;3883:6;3865:46;:::i;:::-;3930:42;4008:15;;;4003:2;3988:18;;3981:43;4060:15;;;;4055:2;4040:18;;;4033:43;3857:54;3568:514;-1:-1:-1;;;3568:514:21:o;4892:289::-;5023:3;5061:6;5055:13;5077:66;5136:6;5131:3;5124:4;5116:6;5112:17;5077:66;:::i;:::-;5159:16;;;;;4892:289;-1:-1:-1;;4892:289:21:o;5541:411::-;5746:6;5735:9;5728:25;5789:2;5784;5773:9;5769:18;5762:30;5709:4;5809:45;5850:2;5839:9;5835:18;5827:6;5809:45;:::i;:::-;5801:53;;5902:42;5894:6;5890:55;5885:2;5874:9;5870:18;5863:83;5541:411;;;;;;:::o;5957:576::-;6210:6;6199:9;6192:25;6253:3;6248:2;6237:9;6233:18;6226:31;6173:4;6280:46;6321:3;6310:9;6306:19;6298:6;6280:46;:::i;:::-;6374:9;6366:6;6362:22;6357:2;6346:9;6342:18;6335:50;6402:33;6428:6;6420;6402:33;:::i;:::-;6394:41;;;6483:42;6475:6;6471:55;6466:2;6455:9;6451:18;6444:83;5957:576;;;;;;;:::o;6538:437::-;6617:1;6613:12;;;;6660;;;6681:61;;6735:4;6727:6;6723:17;6713:27;;6681:61;6788:2;6780:6;6777:14;6757:18;6754:38;6751:218;;6825:77;6822:1;6815:88;6926:4;6923:1;6916:15;6954:4;6951:1;6944:15;6751:218;;6538:437;;;:::o;7106:545::-;7208:2;7203:3;7200:11;7197:448;;;7244:1;7269:5;7265:2;7258:17;7314:4;7310:2;7300:19;7384:2;7372:10;7368:19;7365:1;7361:27;7355:4;7351:38;7420:4;7408:10;7405:20;7402:47;;;-1:-1:-1;7443:4:21;7402:47;7498:2;7493:3;7489:12;7486:1;7482:20;7476:4;7472:31;7462:41;;7553:82;7571:2;7564:5;7561:13;7553:82;;;7616:17;;;7597:1;7586:13;7553:82;;;7557:3;;;7197:448;7106:545;;;:::o;7887:1471::-;8013:3;8007:10;8040:18;8032:6;8029:30;8026:56;;;8062:18;;:::i;:::-;8091:97;8181:6;8141:38;8173:4;8167:11;8141:38;:::i;:::-;8135:4;8091:97;:::i;:::-;8243:4;;8307:2;8296:14;;8324:1;8319:782;;;;9145:1;9162:6;9159:89;;;-1:-1:-1;9214:19:21;;;9208:26;9159:89;7793:66;7784:1;7780:11;;;7776:84;7772:89;7762:100;7868:1;7864:11;;;7759:117;9261:81;;8289:1063;;8319:782;7053:1;7046:14;;;7090:4;7077:18;;8367:66;8355:79;;;8532:236;8546:7;8543:1;8540:14;8532:236;;;8635:19;;;8629:26;8614:42;;8727:27;;;;8695:1;8683:14;;;;8562:19;;8532:236;;;8536:3;8796:6;8787:7;8784:19;8781:261;;;8857:19;;;8851:26;8958:66;8940:1;8936:14;;;8952:3;8932:24;8928:97;8924:102;8909:118;8894:134;;8781:261;-1:-1:-1;;;;;9088:1:21;9072:14;;;9068:22;9055:36;;-1:-1:-1;7887:1471:21:o;9363:220::-;9512:2;9501:9;9494:21;9475:4;9532:45;9573:2;9562:9;9558:18;9550:6;9532:45;:::i",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"../node_modules/@openzeppelin/contracts/utils/Counters.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./NftProperty.sol\";\nimport \"./NftDigital.sol\";\n\ninterface ICollectorsDAO {\n    function createDAO(string memory _name) external;\n}\n\n/// @notice This contract manage the creation of new type of object collection on collectorChain\n/// @notice each collection creation will create : 1 sub dao, 1 ERC1155collection (propertt nft), 1 ERC721 collection(digital nft)\n/// @dev subDao, 1155 and 721 collection will be linked by a unique id for each colllction\ncontract Factory is Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter public _id;\n\n    event collectionCreated(\n        uint256 collectionId,\n        string collectionName,\n        address propertyCollectionAddress,\n        address digitalCollectionAddress\n    );\n\n    /// @dev main information stored for each collections\n    struct Collection {\n        uint256 _collectionId;\n        string _name;\n        address _propertyCollectionAddress;\n        address _digitalCollectionAddress;\n    }\n\n    Collection[] public collections;\n\n    /// @dev used to avoid twice collection in createCollection require\n    mapping(string => bool) collectionName;\n\n    ICollectorsDAO collectorsDAO;\n\n    address daoContractAddress;\n\n    /// @dev get the dao contract address to be able to create subDao\n    constructor(address daoAddress_) {\n        daoContractAddress = daoAddress_;\n        collectorsDAO = ICollectorsDAO(daoAddress_);\n    }\n\n    /// @notice function that create the subDao, 1155 and 721 collection\n    /// @notice only owner of the contract can do it\n    /// @param _collectionName Type of object\n    /// @param _collectionURI URI for 1155 collection\n    /// @param _collectionSymbol symbol of the token for the collection. Should be the same for all the collections\n    function createCollection(\n        string memory _collectionName,\n        string memory _collectionURI,\n        string memory _collectionSymbol\n    )\n        external\n        onlyOwner\n        returns (address nftPropertyAddr, address nftDigitalAddr)\n    {\n        require(\n            bytes(_collectionName).length > 0,\n            \"collection name should not be null\"\n        );\n        require(\n            bytes(_collectionURI).length > 0,\n            \"collection URI should not be null\"\n        );\n        require(\n            collectionName[_collectionName] == false,\n            \"collection already created\"\n        );\n\n        NftProperty nftProperty = new NftProperty(\n            _id.current(),\n            _collectionURI,\n            daoContractAddress\n        );\n        NftDigital nftDigital = new NftDigital(\n            _id.current(),\n            _collectionName,\n            _collectionSymbol,\n            daoContractAddress\n        );\n\n        Collection memory newCollection;\n        newCollection._collectionId = _id.current();\n        newCollection._name = _collectionName;\n        newCollection._propertyCollectionAddress = address(nftProperty);\n        newCollection._digitalCollectionAddress = address(nftDigital);\n        collections.push(newCollection);\n\n        collectorsDAO.createDAO(_collectionName);\n\n        collectionName[_collectionName] = true;\n\n        emit collectionCreated(\n            _id.current(),\n            _collectionName,\n            address(nftProperty),\n            address(nftDigital)\n        );\n\n        _id.increment();\n\n        return (address(nftProperty), address(nftDigital));\n    }\n}\n",
  "sourcePath": "/Users/jeromejulien/Documents/vscode/FormationAlyra/02_Projets/CollectorChain_TokenizedCollectibles/truffle/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Address": [
        3718
      ],
      "Context": [
        3740
      ],
      "Counters": [
        3814
      ],
      "ERC1155": [
        1891
      ],
      "ERC1155URIStorage": [
        2142
      ],
      "ERC165": [
        4013
      ],
      "ERC721": [
        3102
      ],
      "ERC721URIStorage": [
        3361
      ],
      "Factory": [
        231
      ],
      "ICollectorsDAO": [
        11
      ],
      "IERC1155": [
        2013
      ],
      "IERC1155MetadataURI": [
        2157
      ],
      "IERC1155Receiver": [
        2054
      ],
      "IERC165": [
        4025
      ],
      "IERC721": [
        3218
      ],
      "IERC721Metadata": [
        3388
      ],
      "IERC721Receiver": [
        3236
      ],
      "IICollectorsDAO": [
        249
      ],
      "IIICollectorsDAO": [
        390
      ],
      "Math": [
        4890
      ],
      "NftDigital": [
        373
      ],
      "NftProperty": [
        555
      ],
      "Ownable": [
        668
      ],
      "Strings": [
        3989
      ]
    },
    "id": 232,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 3815,
        "src": "61:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 669,
        "src": "130:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NftProperty.sol",
        "file": "./NftProperty.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 556,
        "src": "199:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NftDigital.sol",
        "file": "./NftDigital.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 374,
        "src": "227:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICollectorsDAO",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "ICollectorsDAO",
        "nameLocation": "265:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "4830ebcf",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createDAO",
            "nameLocation": "295:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "319:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "305:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:21:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:0:0"
            },
            "scope": 11,
            "src": "286:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 232,
        "src": "255:82:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "Ownable",
              "nameLocations": [
                "678:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 668,
              "src": "678:7:0"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "678:7:0"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          373,
          555
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12,
          "nodeType": "StructuredDocumentation",
          "src": "339:319:0",
          "text": "@notice This contract manage the creation of new type of object collection on collectorChain\n @notice each collection creation will create : 1 sub dao, 1 ERC1155collection (propertt nft), 1 ERC721 collection(digital nft)\n @dev subDao, 1155 and 721 collection will be linked by a unique id for each colllction"
        },
        "fullyImplemented": true,
        "id": 231,
        "linearizedBaseContracts": [
          231,
          668,
          3740
        ],
        "name": "Factory",
        "nameLocation": "667:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 18,
            "libraryName": {
              "id": 15,
              "name": "Counters",
              "nameLocations": [
                "698:8:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3814,
              "src": "698:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "692:36:0",
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "Counters.Counter",
                "nameLocations": [
                  "711:8:0",
                  "720:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3746,
                "src": "711:16:0"
              },
              "referencedDeclaration": 3746,
              "src": "711:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3746_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "05180237",
            "id": 21,
            "mutability": "mutable",
            "name": "_id",
            "nameLocation": "757:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "733:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3746_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "Counters.Counter",
                "nameLocations": [
                  "733:8:0",
                  "742:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3746,
                "src": "733:16:0"
              },
              "referencedDeclaration": 3746,
              "src": "733:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3746_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "81032603cc83ea314c740484276d4b1d8e02c0e6c3a997883c4bc72bf8409353",
            "id": 31,
            "name": "collectionCreated",
            "nameLocation": "773:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collectionId",
                  "nameLocation": "808:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "800:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collectionName",
                  "nameLocation": "837:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "propertyCollectionAddress",
                  "nameLocation": "869:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "861:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "digitalCollectionAddress",
                  "nameLocation": "912:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "904:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:152:0"
            },
            "src": "767:176:0"
          },
          {
            "canonicalName": "Factory.Collection",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "_collectionId",
                "nameLocation": "1043:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1035:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1035:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "1073:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1066:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 34,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1066:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "_propertyCollectionAddress",
                "nameLocation": "1096:26:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1088:34:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 36,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1088:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "_digitalCollectionAddress",
                "nameLocation": "1140:25:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1132:33:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1132:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Collection",
            "nameLocation": "1014:10:0",
            "nodeType": "StructDefinition",
            "scope": 231,
            "src": "1007:165:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fdbda0ec",
            "id": 44,
            "mutability": "mutable",
            "name": "collections",
            "nameLocation": "1198:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "1178:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Collection_$40_storage_$dyn_storage",
              "typeString": "struct Factory.Collection[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Collection",
                  "nameLocations": [
                    "1178:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1178:10:0"
                },
                "referencedDeclaration": 40,
                "src": "1178:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Collection_$40_storage_ptr",
                  "typeString": "struct Factory.Collection"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "1178:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Collection_$40_storage_$dyn_storage_ptr",
                "typeString": "struct Factory.Collection[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "1216:67:0",
              "text": "@dev used to avoid twice collection in createCollection require"
            },
            "id": 49,
            "mutability": "mutable",
            "name": "collectionName",
            "nameLocation": "1312:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "1288:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 46,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1296:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1288:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 47,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1306:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "collectorsDAO",
            "nameLocation": "1348:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "1333:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
              "typeString": "contract ICollectorsDAO"
            },
            "typeName": {
              "id": 51,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50,
                "name": "ICollectorsDAO",
                "nameLocations": [
                  "1333:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11,
                "src": "1333:14:0"
              },
              "referencedDeclaration": 11,
              "src": "1333:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
                "typeString": "contract ICollectorsDAO"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "daoContractAddress",
            "nameLocation": "1376:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "1368:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 53,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1368:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1504:102:0",
              "statements": [
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "daoContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1514:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61,
                      "name": "daoAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1535:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1514:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:32:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64,
                      "name": "collectorsDAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1556:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
                        "typeString": "contract ICollectorsDAO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66,
                          "name": "daoAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1587:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 65,
                        "name": "ICollectorsDAO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1572:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICollectorsDAO_$11_$",
                          "typeString": "type(contract ICollectorsDAO)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1572:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
                        "typeString": "contract ICollectorsDAO"
                      }
                    },
                    "src": "1556:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
                      "typeString": "contract ICollectorsDAO"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:43:0"
                }
              ]
            },
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1401:65:0",
              "text": "@dev get the dao contract address to be able to create subDao"
            },
            "id": 71,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "daoAddress_",
                  "nameLocation": "1491:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1483:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:21:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:0"
            },
            "scope": 231,
            "src": "1471:135:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2209:1382:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 90,
                                "name": "_collectionName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "2246:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2240:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 88,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2240:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2240:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2263:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2240:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2272:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2240:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e206e616d652073686f756c64206e6f74206265206e756c6c",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef681e6ba8045900f0e163bb9f4f8932bd2a5bb5a3c6e1ac8dfbebb4d325ebca",
                          "typeString": "literal_string \"collection name should not be null\""
                        },
                        "value": "collection name should not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef681e6ba8045900f0e163bb9f4f8932bd2a5bb5a3c6e1ac8dfbebb4d325ebca",
                          "typeString": "literal_string \"collection name should not be null\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2219:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:114:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:114:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 101,
                                "name": "_collectionURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "2370:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2364:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 99,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2364:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2364:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2386:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2364:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2395:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2364:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e205552492073686f756c64206e6f74206265206e756c6c",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2410:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_592a8dc0d9cbf7769378a3c2e6cd0a001b76323093a3db9763b3ed3a71519bde",
                          "typeString": "literal_string \"collection URI should not be null\""
                        },
                        "value": "collection URI should not be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_592a8dc0d9cbf7769378a3c2e6cd0a001b76323093a3db9763b3ed3a71519bde",
                          "typeString": "literal_string \"collection URI should not be null\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2343:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2343:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 110,
                            "name": "collectionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2486:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "id": 111,
                            "name": "_collectionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "2501:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2486:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2521:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2486:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6c6c656374696f6e20616c72656164792063726561746564",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a7938f695a31d86d67f1b5df8e97c4841ff39f7ab180b6f1fa881ba47f7334",
                          "typeString": "literal_string \"collection already created\""
                        },
                        "value": "collection already created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6a7938f695a31d86d67f1b5df8e97c4841ff39f7ab180b6f1fa881ba47f7334",
                          "typeString": "literal_string \"collection already created\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2465:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:113:0"
                },
                {
                  "assignments": [
                    120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 120,
                      "mutability": "mutable",
                      "name": "nftProperty",
                      "nameLocation": "2601:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "2589:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftProperty_$555",
                        "typeString": "contract NftProperty"
                      },
                      "typeName": {
                        "id": 119,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 118,
                          "name": "NftProperty",
                          "nameLocations": [
                            "2589:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 555,
                          "src": "2589:11:0"
                        },
                        "referencedDeclaration": 555,
                        "src": "2589:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftProperty_$555",
                          "typeString": "contract NftProperty"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 124,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2644:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3746_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2648:7:0",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3758,
                          "src": "2644:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3746_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3746_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2644:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 127,
                        "name": "_collectionURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "2671:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 128,
                        "name": "daoContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2699:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2615:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_NftProperty_$555_$",
                        "typeString": "function (uint256,string memory,address) returns (contract NftProperty)"
                      },
                      "typeName": {
                        "id": 122,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 121,
                          "name": "NftProperty",
                          "nameLocations": [
                            "2619:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 555,
                          "src": "2619:11:0"
                        },
                        "referencedDeclaration": 555,
                        "src": "2619:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftProperty_$555",
                          "typeString": "contract NftProperty"
                        }
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftProperty_$555",
                      "typeString": "contract NftProperty"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2589:138:0"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "nftDigital",
                      "nameLocation": "2748:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "2737:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftDigital_$373",
                        "typeString": "contract NftDigital"
                      },
                      "typeName": {
                        "id": 132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 131,
                          "name": "NftDigital",
                          "nameLocations": [
                            "2737:10:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 373,
                          "src": "2737:10:0"
                        },
                        "referencedDeclaration": 373,
                        "src": "2737:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftDigital_$373",
                          "typeString": "contract NftDigital"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 137,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2789:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3746_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2793:7:0",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3758,
                          "src": "2789:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3746_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3746_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2789:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 140,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2816:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 141,
                        "name": "_collectionSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2845:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 142,
                        "name": "daoContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2876:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2761:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_NftDigital_$373_$",
                        "typeString": "function (uint256,string memory,string memory,address) returns (contract NftDigital)"
                      },
                      "typeName": {
                        "id": 135,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 134,
                          "name": "NftDigital",
                          "nameLocations": [
                            "2765:10:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 373,
                          "src": "2765:10:0"
                        },
                        "referencedDeclaration": 373,
                        "src": "2765:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftDigital_$373",
                          "typeString": "contract NftDigital"
                        }
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftDigital_$373",
                      "typeString": "contract NftDigital"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2737:167:0"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "newCollection",
                      "nameLocation": "2933:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "2915:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                        "typeString": "struct Factory.Collection"
                      },
                      "typeName": {
                        "id": 146,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 145,
                          "name": "Collection",
                          "nameLocations": [
                            "2915:10:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "2915:10:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "2915:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_storage_ptr",
                          "typeString": "struct Factory.Collection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2915:31:0"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 149,
                        "name": "newCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "2956:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2970:13:0",
                      "memberName": "_collectionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "2956:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 152,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "2986:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$3746_storage",
                            "typeString": "struct Counters.Counter storage ref"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2990:7:0",
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3758,
                        "src": "2986:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3746_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3746_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2986:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2956:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2956:43:0"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "newCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3009:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3023:5:0",
                      "memberName": "_name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "3009:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 160,
                      "name": "_collectionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3031:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3009:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:37:0"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "newCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3056:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3070:26:0",
                      "memberName": "_propertyCollectionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3056:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 168,
                          "name": "nftProperty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "3107:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftProperty_$555",
                            "typeString": "contract NftProperty"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftProperty_$555",
                            "typeString": "contract NftProperty"
                          }
                        ],
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3099:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3099:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3099:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3056:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:63:0"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 172,
                        "name": "newCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3129:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3143:25:0",
                      "memberName": "_digitalCollectionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3129:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 177,
                          "name": "nftDigital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "3179:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftDigital_$373",
                            "typeString": "contract NftDigital"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftDigital_$373",
                            "typeString": "contract NftDigital"
                          }
                        ],
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3171:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3171:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3171:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3129:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "newCollection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3217:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Collection_$40_memory_ptr",
                          "typeString": "struct Factory.Collection memory"
                        }
                      ],
                      "expression": {
                        "id": 181,
                        "name": "collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3200:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Collection_$40_storage_$dyn_storage",
                          "typeString": "struct Factory.Collection storage ref[] storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3212:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3200:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Collection_$40_storage_$dyn_storage_ptr_$_t_struct$_Collection_$40_storage_$returns$__$bound_to$_t_array$_t_struct$_Collection_$40_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Factory.Collection storage ref[] storage pointer,struct Factory.Collection storage ref)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 190,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3266:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 187,
                        "name": "collectorsDAO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3242:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICollectorsDAO_$11",
                          "typeString": "contract ICollectorsDAO"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3256:9:0",
                      "memberName": "createDAO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3242:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:40:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 193,
                        "name": "collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3293:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "id": 194,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3308:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3293:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3327:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3293:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 200,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "3378:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$3746_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3382:7:0",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3758,
                          "src": "3378:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3746_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3746_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3378:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 203,
                        "name": "_collectionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3405:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 206,
                            "name": "nftProperty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "3442:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftProperty_$555",
                              "typeString": "contract NftProperty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftProperty_$555",
                              "typeString": "contract NftProperty"
                            }
                          ],
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3434:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3434:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3434:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 210,
                            "name": "nftDigital",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3476:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftDigital_$373",
                              "typeString": "contract NftDigital"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftDigital_$373",
                              "typeString": "contract NftDigital"
                            }
                          ],
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3468:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3468:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3468:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 199,
                      "name": "collectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3347:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,string memory,address,address)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:150:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "3342:155:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 214,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3508:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3746_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3512:9:0",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3772,
                      "src": "3508:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3746_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3746_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3508:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3508:15:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 221,
                            "name": "nftProperty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "3550:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftProperty_$555",
                              "typeString": "contract NftProperty"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftProperty_$555",
                              "typeString": "contract NftProperty"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3542:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3542:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3542:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 225,
                            "name": "nftDigital",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3572:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftDigital_$373",
                              "typeString": "contract NftDigital"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftDigital_$373",
                              "typeString": "contract NftDigital"
                            }
                          ],
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3564:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 223,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3564:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3564:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 227,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3541:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 228,
                  "nodeType": "Return",
                  "src": "3534:50:0"
                }
              ]
            },
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "1612:337:0",
              "text": "@notice function that create the subDao, 1155 and 721 collection\n @notice only owner of the contract can do it\n @param _collectionName Type of object\n @param _collectionURI URI for 1155 collection\n @param _collectionSymbol symbol of the token for the collection. Should be the same for all the collections"
            },
            "functionSelector": "ece86c21",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 81,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2129:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 587,
                  "src": "2129:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2129:9:0"
              }
            ],
            "name": "createCollection",
            "nameLocation": "1963:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_collectionName",
                  "nameLocation": "2003:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1989:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_collectionURI",
                  "nameLocation": "2042:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2028:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_collectionSymbol",
                  "nameLocation": "2080:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2066:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:124:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "nftPropertyAddr",
                  "nameLocation": "2164:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2156:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "nftDigitalAddr",
                  "nameLocation": "2189:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2181:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2155:49:0"
            },
            "scope": 231,
            "src": "1954:1637:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 232,
        "src": "658:2935:0",
        "usedErrors": []
      }
    ],
    "src": "36:3558:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x3C3213E0b304694d073d84B7cA018e3EF7700F75",
      "transactionHash": "0x951bed42604949f9090fc340b790857e1f74b0135ee8ea22a6a6e92bd2d06bf4"
    },
    "1337": {
      "events": {},
      "links": {},
      "address": "0xdda8cf1ED93c67d5a55fE6160D42D9025492B9D8",
      "transactionHash": "0xccecd0884b7fde41b3f4c12bb6b516017e6af358704d6a0a9d52c1c1335139c9"
    },
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x81032603cc83ea314c740484276d4b1d8e02c0e6c3a997883c4bc72bf8409353": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collectionId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "collectionName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "propertyCollectionAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "digitalCollectionAddress",
              "type": "address"
            }
          ],
          "name": "collectionCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x179DEf9327346FE5BE957871be3cbEBDd7Acb4eD",
      "transactionHash": "0x66028bc4b09719b948cc04331c2c90438b7b2f28278f6d1c1779a30c12af1cf3"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x7436F6328e0b8b4D2913882600937fFCBa09c381",
      "transactionHash": "0x3c195efb26e9039420f57a385d412b53ca27238c8ad5e8f648bfb06113096979"
    },
    "1669907262959": {
      "events": {},
      "links": {},
      "address": "0x4a54370f85507F60c4395EA40632FeDd21890f64",
      "transactionHash": "0xec833aa2b0d1c55f0e8d370c926313dee066b1079d4ba03e9e57d8c5a0d29fac"
    },
    "1669999947439": {
      "events": {},
      "links": {},
      "address": "0x4aeED53B9777e7C5654161A06d9E5732e2B48caf",
      "transactionHash": "0x141109e7b33fae3997f8f8e472930e52d4c1616070fcb5cea97382a3825b169c"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-09T15:18:10.862Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "subDao, 1155 and 721 collection will be linked by a unique id for each colllction",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "get the dao contract address to be able to create subDao"
      },
      "createCollection(string,string,string)": {
        "params": {
          "_collectionName": "Type of object",
          "_collectionSymbol": "symbol of the token for the collection. Should be the same for all the collections",
          "_collectionURI": "URI for 1155 collection"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "collectionName": {
        "details": "used to avoid twice collection in createCollection require"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createCollection(string,string,string)": {
        "notice": "function that create the subDao, 1155 and 721 collectiononly owner of the contract can do it"
      }
    },
    "notice": "This contract manage the creation of new type of object collection on collectorChaineach collection creation will create : 1 sub dao, 1 ERC1155collection (propertt nft), 1 ERC721 collection(digital nft)",
    "version": 1
  }
}